// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/rating_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/stwrtrio/movie-festival-api/internal/models"
)

// MockRatingService is a mock of RatingService interface.
type MockRatingService struct {
	ctrl     *gomock.Controller
	recorder *MockRatingServiceMockRecorder
}

// MockRatingServiceMockRecorder is the mock recorder for MockRatingService.
type MockRatingServiceMockRecorder struct {
	mock *MockRatingService
}

// NewMockRatingService creates a new mock instance.
func NewMockRatingService(ctrl *gomock.Controller) *MockRatingService {
	mock := &MockRatingService{ctrl: ctrl}
	mock.recorder = &MockRatingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRatingService) EXPECT() *MockRatingServiceMockRecorder {
	return m.recorder
}

// RateMovie mocks base method.
func (m *MockRatingService) RateMovie(ctx context.Context, rating *models.Rating) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RateMovie", ctx, rating)
	ret0, _ := ret[0].(error)
	return ret0
}

// RateMovie indicates an expected call of RateMovie.
func (mr *MockRatingServiceMockRecorder) RateMovie(ctx, rating interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RateMovie", reflect.TypeOf((*MockRatingService)(nil).RateMovie), ctx, rating)
}
